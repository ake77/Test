Git 
    ###ใช้บ่อย
    git config --global user.name "ชื่อที่จะใช้"
    git config --global user.email "กับอีเมลที่จะใช้"
    git remote set-url origin ...       ใช้ในเปลี่ยน remote repository 
    git init
    git reset                           ใช้เอาไฟล์ที่ add ไปแล้วออกมาจาก staged ให้กลับมาเป็น modified
    git reset --hard                    นั้นคือสั่งล้างค่าเก่าๆทั้งหมดรวมทั้งไฟล์ที่ทำงานอยู่
    git rm ...				ใช้ลบไฟล์

    #ตอนเปลี่ยนbranch
    git rm -r --cached .    เคลียrepository ###ใช้บ่อยเวลาเปลี่ยน branch
    git clean -df          
    ---------------------------------------------------------------------------------------------------------------------------------------------
    git fetch               ใช้ดีงไฟล์มาดูการเปลี่ยนแปลง
    git merge               ใช้รวมเข้าของเก่า
    git pull origin ...     คือ git fetch + git merge
    
    git add :/                          ใช้ตอนอยู่ใน sub-folder แล้วต้องการ add ทุกไฟล์รวมถึงที่อยู่ข้างนอกโฟลเดอร์ที่เราอยู่ แต่ยังอยู่ใน repo เดียวกัน เข้าสู่ staged status
    git add '*.txt'                     add ไฟล์ทั้งหมดที่นามสกุล .txt เป็นต้น
    git add filename
    git checkout <commit_hash>          ย้อนหาcommitในอดีต

    git push origin ...			        ใช้push branch
    git push -u origin master
    git push origin master --force      ถ้าpushธรรมดาไม่ได้
    git push -f origin master

    git branch                          ใช้เช็ค branch
    git branch  ...                     ใช้สร้าง branch ใหม่
    git branch -D ...                   ใช้ลบbranch
    git push origin --delete ...	สั่งลบ branch บน repo
    git checkout ...                    ใช้เปลี่ยน branch
    git checkout -b ...                 แบบสั้นๆได้ เป็นการสร้าง branch ใหม่และ checkout ให้เลย เป็นการรวมสองคำสั่งเป็นคำสั่งเดียว นั่นเอง
    git merge ...                       เป็นการรวม branch กำหนดชื่อ branch

    git blame ...           ใช้ดูว่ามีใครที่เข้ามาเปลี่ยนแปลง อะไร และ เมื่อใด ใน my_file
    git reflog              ใช้แสดง Log ของการเปลี่ยนแปลงใน HEAD ของ Local Repository มันเหมาะสำหรับการค้นหางานที่สูญหายไป
    git diff                ใช้ดูการเปลี่ยนแปลงที่สถานะ modified
    git diff --staged       ใช้ดูแล้ว add ไปที่สถานะ staged
    git diff HEAD    
    git log -p              ดูส่วนที่แก้ไข

    git checkout .          ใช้ย้อนไฟล์ที่แก้ไปแล้วแต่ยังไม่ได้commit
    git remove --cached ... จะเป็นการลบไฟล์ ... ออกจากการ track ของ Git แต่ไม่ได้ลบไฟล์ในโปรเจ็คของเรา
    git reset --soft HEAD~1 วิธีที่จะย้อนกลับไป commit ล่าสุดก็คือ
    git reset ...           แต่ถ้าเราดันเผลอลบ แล้วก็ยังไป add เข้าสู่ staged แล้ว ก็ต้องใช้
    git checkout ...        ทีนี้อยากจะ reset กู้คืนไฟล์ที่เผลอลบไป เช่น เผลอลบ ... ก็เพียงแค่ใช้คำสั่ง
    
    


    ###ควรระวัง
    git clean               เป็นคำสั่งที่ใช้แสดงและลบ Source Code ที่อยู่ในสถานะ Untracked ออกจาก Working Directory
